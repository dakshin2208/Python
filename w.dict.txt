In Python, a dictionary is a mutable, unordered collection of key-value pairs. Each key in a dictionary must be unique, and it is associated with a specific value. Dictionaries are defined using curly braces {}, and the key-value pairs are separated by colons :. Here's a simple example:
# Creating a dictionary
my_dict = {
    "name": "John",
    "age": 25,
    "city": "New York"
}

# Accessing values using keys
print(my_dict["name"])  # Output: John
print(my_dict["age"])   # Output: 25
print(my_dict["city"])  # Output: New York

# Modifying a value
my_dict["age"] = 26

# Adding a new key-value pair
my_dict["gender"] = "Male"

# Iterating through keys and values
for key, value in my_dict.items():
    print(f"{key}: {value}")

# Output:
# name: John
# age: 26
# city: New York
# gender: Male


f string 
In Python, an f-string, or "formatted string literal," is a way to embed expressions inside string literals, using curly braces {}. When you prefix a string literal with f or F, it becomes an f-string, and you can include variables or expressions inside the curly braces, which will be evaluated at runtime and formatted into the string.

name = "Alice"
age = 30

# Using f-string to format a string
message = f"Hello, my name is {name} and I am {age} years old."

print(message)
# Output: Hello, my name is Alice and I am 30 years old.

In the example above, the f-string allows you to embed the variables name and age directly into the string, making it concise and more readable.

F-strings were introduced in Python 3.6 and provide a convenient and expressive way to create formatted strings, especially when you need to include variables or expressions within the string.
